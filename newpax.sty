%% pax.sty
%% Copyright 2006-2008, 2011, 2012 Heiko Oberdiek
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Heiko Oberdiek.
%
% This work consists of the file pax.sty.
% See README for more details and documentation.
%
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{newpax}%
  [2020/02/29 v0.1 Annotation support for PDF graphics based on pax.sty adapted by (UF)]%

\RequirePackage{ifpdf}
%\ifpdf
%\else
%  \PackageError{pax}{Missing pdfTeX in PDF mode}{%
%    Other drivers are not supported.%
%  }%
%  \expandafter\endinput
%\fi
\RequirePackage{pdfresources}
\RequirePackage{xparse}
\RequirePackage{graphicx}
\RequirePackage{ltxcmds}[2011/04/18]
\RequirePackage{kvsetkeys}[2011/04/07]
\RequirePackage{kvoptions}[2010/12/23]
\RequirePackage{auxhook}[2011/03/04]
\RequirePackage{etexcmds}[2011/02/16]
\RequirePackage{pdftexcmds}
\ExplSyntaxOn
\bool_new:N \l__pax_use_attributes_bool
\tl_new:N \l__pax_destprefix_tl

\NewDocumentCommand\paxsetup { m }
  {
    \keys_set:nn {pax}{ #1}
  }

\keys_define:nn {pax}
  {
    useattributes .bool_set:N = \l__pax_use_attributes_bool,
    destprefix  .tl_set:N = \l__pax_destprefix_tl
  }
\cs_new_protected:Npn \@PAX@setattributes@n #1 %link type
  {
    \bool_if:NT \l__pax_use_attributes_bool
      {
        \tl_if_empty:NTF  \PAX@key@C
          {
            \hook_remove:nnn { pdf } { link_#1_attr } { C }
          }
          {
            \hook_put:nnnn
             { pdf }
             { link_#1_attr }
             { C }
             { \PAX@key@C }
          }
        \tl_if_empty:NTF \PAX@key@Border
          {
            \hook_remove:nnn { pdf } { link_#1_attr } { Border }
          }
          {
            \hook_put:nnnn
              { pdf }
              { link_#1_attr }
              { Border }
              { \PAX@key@Border }
          }
        \tl_if_empty:NTF \PAX@key@BS
          {
            \hook_remove:nnn { pdf } { link_#1_attr } { BS }
          }
          {
            \hook_put:nnnn
              { pdf }
              { link_#1_attr }
              { BS }
              { \PAX@key@BS }
          }
        \tl_if_empty:NTF \PAX@key@H
          {
            \hook_remove:nnn { pdf } { link_#1_attr } { H }
          }
          {
            \hook_put:nnnn
              { pdf }
              { link_#1_attr }
              { H }
              { \PAX@key@H }
          }
      }
  }


\cs_set_eq:NN \@PAX@annotation@nnnn \pdf_annotation:nnnn

\cs_new_protected:Npn \@PAX@linkgoto@xnn #1 #2 #3  %#1 dest #2 width #3 height
  {
    \group_begin:
      \exp_args:Nx\@PAX@setattributes@n {GoTo}
      \leavevmode
      \exp_args:Nx\pdf_link_goto_begin:nw
        { #1 }
        \hbox_to_wd:nn {#2}{\@PAX@ensurelinkbox@n { \rule{0pt}{#3} }}
      \pdf_link_goto_end:
    \group_end:
  }

\cs_generate_variant:Nn \pdf_annotation:nnnnn {xnnnx}

\cs_new_protected:Npn \@PAX@annotboxlink@xnnx #1 #2 #3 #4  %#1 type, #2 width #3 height #4 spec
  {
    \group_begin:
      \exp_args:Nx\@PAX@setattributes@n {#1}
      \leavevmode\pdf_annotation:xnnnx {link_#1}{#2}{#3}{0pt}{#4}
    \group_end:
  }

\cs_new_protected:Npn \@PAX@destination@xx #1 #2
  {
    \exp_args:Nxx \pdf_destination:nn {#1}{#2}
  }

\prop_const_from_keyval:Nn \c__pax_map_linktypes_prop
  {
    URI   = url,
    GoTo  = link,
    GotoR = file,
    Named = menu
  }

\cs_new:Npn \@PAX@maplinktype@V #1 { \exp_args:NNV \prop_item:Nn \c__pax_map_linktypes_prop {#1}}

\cs_new:Npn \@PAX@tempa
\cs_new_protected:Npn \@PAX@escapename@NV #1 #2
  {
    \sys_if_engine_pdftex:TF
      { %pdftex. Should we assume utf8 or allow other input encodings?
        \exp_args:NNx
          \str_gset_convert:Nnnn #1 {\tl_to_str:V{#2}}{utf8}{utf8/name} %
      }
      { %luatex,xetex
        \exp_args:NNx
        \str_gset_convert:Nnnn #1 {\tl_to_str:V{#2}}{}{utf8/name} %utf8 because of hyperref
      }
  }

\sys_if_engine_xetex:TF
  {
    \cs_set_eq:NN \@PAX@ensurelinkbox@n \XeTeXLinkBox
  }
  {
    \cs_set_eq:NN \@PAX@ensurelinkbox@n \use:n
  }
\ExplSyntaxOff
% Hook into \includegraphics of graphicx with one optional
% star, one optional argument with key value pairs and
% the graphics name
\let\PAX@ORG@includegraphics\includegraphics
\def\includegraphics{%
  \@ifstar{%
    \@ifnextchar[{%
      \begingroup
        \def\x{\endgroup
           \PAX@includegraphics[clip,%
        }%
      \expandafter\x\@gobble
    }{%
      \PAX@includegraphics[clip]%
    }%
  }{%
    \@ifnextchar[{%
      \PAX@includegraphics
    }{%
      \PAX@includegraphics[]%
    }%
  }%
}
\def\PAX@includegraphics[#1]#2{%
  \begingroup
    \sbox0{\PAX@ORG@includegraphics[{#1}]{#2}}%
    \edef\PAX@inc@width{\the\wd0}%
    \edef\PAX@inc@height{\the\dimexpr\dp0+\ht0}%
    \leavevmode
    \hbox to \wd0{%
      \rlap{\copy0}%
      \raise-\dp0\hbox{%
        \PAX@AddAnnots{#1}{#2}%
      }%
      \hfill
    }%
  \endgroup
}

\SetupKeyvalOptions{family=PAX@Gin,prefix=PAX@Gin@}
\DeclareStringOption[1]{page}
\DeclareStringOption[0]{angle}
\DeclareBoolOption{clip}
\define@key{PAX@Gin}{viewport}{%
  \ltx@LocalAppendToMacro\PAX@Gin@box@opts{%
    \PAX@viewport#1\\%
  }%
}
\define@key{PAX@Gin}{trim}{%
  \ltx@LocalAppendToMacro\PAX@Gin@box@opts{%
    \PAX@trim#1\\%
  }%
}
\let\PAX@Gin@box@opts\@empty

\def\PAX@viewport#1 #2 #3 #4\\{%
  \PAX@defaultbp\PAX@vllx{#1}%
  \PAX@defaultbp\PAX@vlly{#2}%
  \PAX@defaultbp\PAX@vurx{#3}%
  \PAX@defaultbp\PAX@vury{#4}%
  \edef\PAX@page@llx{\dimexpr\PAX@page@llx+\PAX@vllx\relax}%
  \edef\PAX@page@lly{\dimexpr\PAX@page@lly+\PAX@vlly\relax}%
  \edef\PAX@page@urx{\dimexpr\PAX@page@llx+\PAX@vlly\relax}%
  \edef\PAX@page@ury{\dimexpr\PAX@page@lly+\PAX@vury\relax}%
}
\def\PAX@trim#1 #2 #3 #4\\{%
  \PAX@defaultbp\PAX@tllx{#1}%
  \PAX@defaultbp\PAX@tlly{#2}%
  \PAX@defaultbp\PAX@turx{#3}%
  \PAX@defaultbp\PAX@tury{#4}%
  \edef\PAX@page@llx{\dimexpr\PAX@page@llx+\PAX@tllx\relax}%
  \edef\PAX@page@lly{\dimexpr\PAX@page@lly+\PAX@tlly\relax}%
  \edef\PAX@page@urx{\dimexpr\PAX@page@urx-\PAX@turx\relax}%
  \edef\PAX@page@ury{\dimexpr\PAX@page@ury-\PAX@tury\relax}%
}

\def\PAX@defaultbp#1#2{%
  \afterassignment\PAX@def@bp\dimen@#2bp\relax{#1}{#2}%
}
\def\PAX@def@bp#1\relax#2#3{%
  \if!#1!%
    \edef#2{#3bp}%
  \else
    \edef#2{#3}%
  \fi
}

% ignore unknown options in family `PAX@Gin'
\kv@set@family@handler{PAX@Gin}{}

\def\PAX@AddAnnots#1#2{%
  \kvsetkeys{PAX@Gin}{#1}%
  \Grot@setangle{\PAX@Gin@angle}%
  % a little careful, is type of angle int or real?
  \loop
  \ifdim\PAX@Gin@angle\p@<360\p@
  \else
    \edef\PAX@Gin@angle{\the\numexpr-360+\number\PAX@Gin@angle}%
  \repeat
  \loop
  \ifdim\PAX@Gin@angle\p@<\z@
    \edef\PAX@Gin@angle{\strip@pt\dimexpr\PAX@Gin@angle\p@+360\p@}%
  \repeat
  \ifcase0\ifnum\PAX@Gin@angle=0 1\fi
          \ifnum\PAX@Gin@angle=90 1\fi
          \ifnum\PAX@Gin@angle=180 1\fi
          \ifnum\PAX@Gin@angle=270 1\fi
    \PackageWarning{pax}{Unsupported value for option angle}%
  \fi
  \filename@parse{#2}%
  \def\PAX@file{\filename@area\filename@base.newpax}%
  \let\[\PAX@parser
  \def\<{<}%
  \def\>{>}%
  \endlinechar=-1 %
  \InputIfFileExists\PAX@file{%
  }{%
    \typeout{* Missing: \PAX@file}%
  }%
}
\def\PAX@parser#1{\PAX@call{cmd}{#1}{}}%
\def\PAX@call#1#2#3{%
  \@ifundefined{PAX@#1@#2}\PAX@skip{#3\csname PAX@#1@#2\endcsname}%
}
\def\PAX@skip#1\\{}
\def\PAX@stop#1\\{}

\def\PAX@cmd@page#1#2{%
  \PAX@filter@page{#1}{%
    \PAX@getrect{page}#2\@nil
    \PAX@Gin@box@opts
    \ifcase0\ifnum\PAX@Gin@angle=90 1\fi
            \ifnum\PAX@Gin@angle=270 1\fi
    \else
      \let\PAX@temp\PAX@inc@width
      \let\PAX@inc@width\PAX@inc@height
      \let\PAX@inc@height\PAX@temp
    \fi
    \Gscale@div\PAX@scale@x\PAX@inc@width{%
      \dimexpr\PAX@page@urx-\PAX@page@llx\relax
    }%
    \Gscale@div\PAX@scale@y\PAX@inc@height{%
      \dimexpr\PAX@page@ury-\PAX@page@lly\relax
    }%
    \PAX@skip
  }%
}
\def\PAX@filter@page#1{%
  \ifnum\PAX@Gin@page=#1 %
    \expandafter\@firstofone
  \else
    \ifnum\PAX@Gin@page<#1 %
      \csname fi\endcsname
      \csname fi\endcsname
      \expandafter\PAX@stop\@gobblefour
    \fi
    \expandafter\PAX@skip
  \fi
}
\def\PAX@getrect#1#2 #3 #4 #5\@nil{%
  \@namedef{PAX@#1@llx}{#2bp}%
  \@namedef{PAX@#1@lly}{#3bp}%
  \@namedef{PAX@#1@urx}{#4bp}%
  \@namedef{PAX@#1@ury}{#5bp}%
}

\def\PAX@cmd@annot#1#2{%
  \PAX@filter@page{#1}{%
    \PAX@call{annot}{#2}{}%
  }%
}
\def\PAX@annot@Link#1#2#3{%
  \def\PAX@link@type{#2}%
  \PAX@call{link}{#2}{%
    \begingroup
    \PAX@getrect{annot}#1\@nil
    \kvsetkeys{PAX}{#3}%
  }%
  \PAX@skip
}
\newif\ifPAX@ok
\PAX@oktrue

\newif\ifPAX@GoTo

\def\PAX@pdf@annot#1{%
  \ifPAX@Gin@clip
    \ifdim\PAX@annot@llx<\PAX@page@llx
      \let\PAX@annot@llx\PAX@pagellx
    \fi
    \ifdim\PAX@annot@lly<\PAX@page@lly
      \let\PAX@annot@lly\PAX@page@lly
    \fi
    \ifdim\PAX@annot@urx>\PAX@page@urx
      \let\PAX@annot@urx\PAX@page@urx
    \fi
    \ifdim\PAX@annot@ury>\PAX@page@ury
      \let\PAX@annot@ury\PAX@page@ury
    \fi
    \PAX@okfalse
    \ifdim\PAX@annot@llx<\PAX@annot@urx
      \ifdim\PAX@annot@lly<\PAX@annot@ury
        \PAX@oktrue
      \fi
    \fi
  \else
    \PAX@oktrue
  \fi
  \ifPAX@ok
    \ifcase 0\ifnum\PAX@Gin@angle=90 1\fi
             \ifnum\PAX@Gin@angle=180 2\fi
             \ifnum\PAX@Gin@angle=270 3\fi\space
      % angle = 0
      \def\PAX@raise{%
        \PAX@scale@y\dimexpr\PAX@annot@lly-\PAX@page@lly\relax
      }%
      \def\PAX@right{%
        \PAX@scale@x\dimexpr\PAX@annot@llx-\PAX@page@llx\relax
      }%
    \or % angle = 90
      \def\PAX@raise{%
        \PAX@scale@x\dimexpr\PAX@annot@llx-\PAX@page@llx\relax
      }%
      \def\PAX@right{%
        \PAX@scale@y\dimexpr\PAX@page@ury-\PAX@annot@ury\relax
      }%
    \or % angle = 180
      \def\PAX@raise{%
        \PAX@scale@y\dimexpr\PAX@page@ury-\PAX@annot@ury\relax
      }%
      \def\PAX@right{%
        \PAX@scale@x\dimexpr\PAX@page@urx-\PAX@annot@urx\relax
      }%
    \or % angle = 270
      \def\PAX@raise{%
        \PAX@scale@x\dimexpr\PAX@page@urx-\PAX@annot@urx\relax
      }%
      \def\PAX@right{%
        \PAX@scale@y\dimexpr\PAX@annot@lly-\PAX@page@lly\relax
      }%
    \fi
    \@namedef{%
      PAX@%
      \ifcase0\ifnum\PAX@Gin@angle=90 1\fi
              \ifnum\PAX@Gin@angle=270 1\fi\space
        width%
      \else
        height%
      \fi
    }{%
      \PAX@scale@x\dimexpr\PAX@annot@urx-\PAX@annot@llx\relax
    }%
    \@namedef{%
      PAX@%
      \ifcase0\ifnum\PAX@Gin@angle=90 1\fi
              \ifnum\PAX@Gin@angle=270 1\fi\space
        height%
      \else
        width%
      \fi
    }{%
      \PAX@scale@y\dimexpr\PAX@annot@ury-\PAX@annot@lly\relax
    }%
    \raise\PAX@raise\hb@xt@\z@{%
      \kern\PAX@right
      \ifPAX@GoTo
        %additional box for lualatex ...
        \hbox{%
          \@PAX@linkgoto@xnn
            {PAX@\PAX@file @\PAX@key@DestLabel @\csname l__pax_destprefix_tl\endcsname}%
            {\PAX@width}%
            {\PAX@height}%
            }%
      \else
        \hbox{%
        \@PAX@annotboxlink@xnnx {\PAX@link@type}{\PAX@width}{\PAX@height}
          {
            /Subtype/Link%
            /A<<%
              /Type/Action%
              /S/\PAX@link@type
              #1%
             >>%
         }}%
      \fi
      \hss
    }%
  \fi
  \endgroup
}

\def\PAX@set@attrs{%
  \PAX@attrs\PAX@link@type{%
    \PAX@set@attr{C}\PAX@key@C
    \PAX@set@attr{Border}\PAX@key@Border
    \PAX@set@attr{BS}\PAX@key@BS
    \PAX@set@attr{H}\PAX@key@H
  }%
}

\def\PAX@set@attr#1#2{%
  \ifx#2\@empty
  \else
    /#1 #2%
  \fi
}

\def\PAX@attrs#1{%
  \@ifundefined{PAX@attrs@#1}{%
    \@ifundefined{hyperref}{%
      \@firstofone
    }{%
      \Hy@setpdfborder
      /H\@pdfhighlight
      \@ifundefined{PAX@htype@#1}\@firstofone{%
        \@ifundefined{@\@nameuse{PAX@htype@#1}bordercolor}\@firstofone{%
          /C[\@nameuse{@\@nameuse{PAX@htype@#1}bordercolor}]%
          \@gobble
        }%
      }{%
        \PAX@set@attr{C}\PAX@key@C
      }%
      \@gobble
    }%
  }{%
    \@nameuse{PAX@attrs@#1}%
  }%
}
\def\PAX@htype@GoToR{file}
\def\PAX@htype@GoTo{link}
\def\PAX@htype@Named{link}
\def\PAX@htype@URI{url}

\def\PAX@link@URI{%
  \PAX@pdf@annot{%
    /URI\PAX@key@URI
  }%
}
\def\PAX@link@Named{%
  \PAX@pdf@annot{%
    /N/\PAX@key@Name %the value is from a pdf so we can assume it is correctly escaped??
  }%
}
\def\PAX@link@GoToR{%
  \PAX@pdf@annot{%
    /F\PAX@key@File
    /D%
    \ifx\PAX@key@DestName\@empty
      [\PAX@key@DestPage\space\PAX@key@DestView]%
    \else
      \PAX@key@DestName
    \fi
  }%
}

% GoTo

\AddLineBeginAux{%
  \string\providecommand{\string\PAX@DestReq}[2]{}%
}
\AddLineBeginAux{%
  \string\providecommand{\string\PAX@DestProv}[2]{}%
}
\AtBeginDocument{%
  \let\PAX@DestReq\@gobbletwo
  \let\PAX@DestProv\@gobbletwo
}
\def\PAX@DestReq#1#2{%
  \expandafter\gdef\csname PAX@REQ@#1@#2\endcsname{}%
}
\def\PAX@DestProv#1#2{%
  \expandafter\gdef\csname PAX@PROV@#1@#2\endcsname{}%
}

\def\PAX@link@GoTo{%
  \ifnum0<0\PAX@key@DestLabel\relax
    \expandafter\@firstofone
  \else
    \endgroup
    \expandafter\@gobble
  \fi
  {%
    \if@filesw
      \protected@write\@auxout{}{%
        \string\PAX@DestReq{\PAX@file}{\PAX@key@DestLabel}%
      }%
    \fi
    % Generate link, if destination exists
    \@ifundefined{PAX@PROV@\PAX@file @\PAX@key@DestLabel}{%
      \endgroup
    }{%
      \PAX@GoTotrue
      \PAX@pdf@annot{}%
    }%
  }%
}

% Read destinations
\def\PAX@cmd@dest#1#2#3#4{%
  \PAX@filter@page{#1}{%
    \if@filesw
      \protected@write\@auxout{}{%
        \string\PAX@DestProv{\PAX@file}{#2}%
      }%
    \fi
    \@ifundefined{PAX@REQ@\PAX@file @#2}{%
    }{%
      \begingroup
        \let\PAX@key@DestY\PAX@page@ury
        \let\PAX@key@DestX\PAX@page@llx
        \kvsetkeys{PAX}{#4}%
        \let\PAX@dest@llx\PAX@key@DestX
        \let\PAX@dest@urx\PAX@key@DestX
        \let\PAX@dest@lly\PAX@key@DestY
        \let\PAX@dest@ury\PAX@key@DestY
        \ifx\PAX@key@DestRect\@empty
        \else
          \def\PAX@temp{dest}%
          \expandafter\PAX@getrect\expandafter\PAX@temp
          \PAX@key@DestRect\@nil
        \fi
        \ifPAX@Gin@clip
          \ifx\PAX@dest@llx<\PAX@page@llx
            \let\PAX@dest@llx\PAX@page@llx
          \fi
          \ifx\PAX@dest@lly<\PAX@page@lly
            \let\PAX@dest@lly\PAX@page@lly
          \fi
          \ifx\PAX@dest@urx>\PAX@page@urx
            \let\PAX@dest@urx\PAX@page@urx
          \fi
          \ifx\PAX@dest@ury>\PAX@page@ury
            \let\PAX@dest@ury\PAX@page@ury
          \fi
          % at least prevent destinations outside the window
          \ifx\PAX@dest@llx>\PAX@page@urx
            \PAX@dest@llx\PAX@page@urx
          \fi
          \ifx\PAX@dest@lly>\PAX@page@ury
            \PAX@dest@lly\PAX@page@ury
          \fi
          \ifx\PAX@dest@urx<\PAX@page@llx
            \PAX@dest@urx\PAX@page@llx
          \fi
          \ifx\PAX@dest@ury<\PAX@page@lly
            \PAX@dest@ury\PAX@page@lly
          \fi
        \fi
        % I don't know, what is the best idea for rotated stuff,
        % perhaps using the corner llx/ury
        \ifcase 0\ifnum\PAX@Gin@angle=90 1\fi
                 \ifnum\PAX@Gin@angle=180 2\fi
                 \ifnum\PAX@Gin@angle=270 3\fi\space
          % angle = 0
          \def\PAX@raise{%
            \PAX@scale@y\dimexpr\PAX@dest@lly-\PAX@page@lly\relax
          }%
          \def\PAX@right{%
            \PAX@scale@x\dimexpr\PAX@dest@llx-\PAX@page@llx\relax
          }%
        \or % angle = 90
          \def\PAX@raise{%
            \PAX@scale@x\dimexpr\PAX@dest@llx-\PAX@page@llx\relax
          }%
          \def\PAX@right{%
            \PAX@scale@y\dimexpr\PAX@page@ury-\PAX@dest@ury\relax
          }%
        \or % angle = 180
          \def\PAX@raise{%
            \PAX@scale@y\dimexpr\PAX@page@ury-\PAX@dest@ury\relax
          }%
          \def\PAX@right{%
            \PAX@scale@x\dimexpr\PAX@page@urx-\PAX@dest@urx\relax
          }%
        \or % angle = 270
          \def\PAX@raise{%
            \PAX@scale@x\dimexpr\PAX@page@urx-\PAX@dest@urx\relax
          }%
          \def\PAX@right{%
            \PAX@scale@y\dimexpr\PAX@dest@lly-\PAX@page@lly\relax
          }%
        \fi
        \edef\PAX@name{PAX@\PAX@file @#2@\csname l__pax_destprefix_tl\endcsname}%
        \let\PAX@type\@empty
        \ifcase\pdf@strcmp{#3}{FITR}\relax
          \def\PAX@type{xyz}% too lazy for now
        \fi
        \ifcase\pdf@strcmp{#3}{XYZ}\relax
          \def\PAX@type{xyz}%
          \ifx\PAX@key@DestZoom\@empty
          \else
            \edef\PAX@type{%
              \PAX@type
              zoom\numexpr1000*\number\dimexpr\PAX@key@DestZoom pt\relax
              /\number\p@\relax
            }%
          \fi
        \fi
        \ifcase\pdf@strcmp{#3}{FIT}\relax
          \def\PAX@type{fit}%
        \fi
        \ifcase\pdf@strcmp{#3}{FITB}\relax
          \def\PAX@type{fitb}%
        \fi
        \ifcase\pdf@strcmp{#3}{FITH}\relax
          \def\PAX@type{fith}%
        \fi
        \ifcase\pdf@strcmp{#3}{FITBH}\relax
          \def\PAX@type{fitbh}%
        \fi
        \ifcase\pdf@strcmp{#3}{FITV}\relax
          \def\PAX@type{fitv}%
        \fi
        \ifcase\pdf@strcmp{#3}{FITBV}\relax
          \def\PAX@type{fitbv}%
        \fi
        \ifx\PAX@type\@empty
          \def\PAX@type{xyz}%
        \fi
        \raise\PAX@raise\hb@xt@\z@{%
          \kern\PAX@right
          \hbox{\@PAX@destination@xx {\PAX@name}{\PAX@type}}%
          \hss
        }%
      \endgroup
    }%
    \PAX@skip
  }%
}

\SetupKeyvalOptions{family=PAX,prefix=PAX@key@}
\DeclareStringOption{URI}
\DeclareStringOption{Name}
\DeclareStringOption{DestName}
\DeclareStringOption{DestPage}
\DeclareStringOption{DestView}
\DeclareStringOption{File}
\DeclareStringOption{C}
\DeclareStringOption{Border}
\DeclareStringOption{BS}
\DeclareStringOption{H}
\DeclareStringOption{DestLabel}
\DeclareStringOption{DestRect}
\DeclareStringOption{DestZoom}
\define@key{PAX}{DestX}{%
  \PAX@defaultbp\PAX@key@DestX{#1}%
}
\define@key{PAX}{DestY}{%
  \PAX@defaultbp\PAX@key@DestY{#1}%
}
\endinput
